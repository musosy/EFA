name: PR and Push - Build and Test

on:
  [pull_request, push]

jobs:
  build: # install deps and then build the app
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Build the application
        run: npm run build
      - name: Check linter and prettier
        run: npm run check
  docker: # push docker image to dockerhub
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Check out code
        uses: actions/checkout@v3
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          tags: musosy/efa:latest
  jest:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.1
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: efa_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Install deps
        run: npm install --force
      - name: Run tests
        run: |
          DATABASE_URL="postgres://postgres:postgres@localhost:5432/efa_test" npx prisma db push &&
          DATABASE_URL="postgres://postgres:postgres@localhost:5432/efa_test" npx jest --runInBand --coverage
